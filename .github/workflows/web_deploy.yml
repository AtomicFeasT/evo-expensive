name: Deploy Web

on:
  push:
    branches:
      - main
    paths:
      - 'apps/web/**'
      - 'apps/html/**'
      - '.github/workflows/web_deploy.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Remove unused packages
        run: rm services/{mail, users, core, api}/package.json

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn.lock
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache Next.js Build
      - uses: actions/cache@v2
        id: next-cache
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn workspaces focus --production --all

      - name: Build @neo/postcss
        working-directory: ./libs/postcss
        run: yarn build

      - name: Build @neo/global
        working-directory: ./packages/global
        run: yarn build

      - name: Build @neo/tokens
        working-directory: ./packages/tokens
        run: yarn build

      - name: Build @neo/icons
        working-directory: ./packages/icons
        run: yarn build

      - name: Build @neo/ui
        working-directory: ./packages/ui
        run: yarn build

      - name: Build @neo/html CSS
        working-directory: ./apps/html
        run: yarn css

      - name: Build @neo/web
        working-directory: ./apps/web
        run: yarn gh-build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Export static files
        working-directory: ./apps/web
        run: yarn export
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Add .nojekyll file
        working-directory: ./apps/web
        run: touch ./dist/.nojekyll

      - name: Create old folder for neo-expensive
        working-directory: ./apps/web/dist
        run: mkdir ./old

      - name: Copy @neo/html into old folder
        working-directory: ./apps
        run: cp -r ./html/* ./web/dist/old

      - name: Deploy to github pages
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages
          folder: ./apps/web/dist
